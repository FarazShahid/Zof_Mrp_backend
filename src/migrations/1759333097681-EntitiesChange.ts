import { MigrationInterface, QueryRunner } from "typeorm";

export class EntitiesChange1759333097681 implements MigrationInterface {
    name = 'EntitiesChange1759333097681'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`auditlogs\` DROP FOREIGN KEY \`FK_AuditLogs_Users\``);
        await queryRunner.query(`ALTER TABLE \`inventorysubcategories\` DROP FOREIGN KEY \`inventorysubcategories_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` DROP FOREIGN KEY \`InventoryItems_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` DROP FOREIGN KEY \`InventoryItems_ibfk_2\``);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` DROP FOREIGN KEY \`InventoryItems_ibfk_3\``);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` DROP FOREIGN KEY \`InventoryItems_ibfk_4\``);
        await queryRunner.query(`ALTER TABLE \`inventorytransactions\` DROP FOREIGN KEY \`InventoryTransactions_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`media_links\` DROP FOREIGN KEY \`media_links_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`orderstatuslogs\` DROP FOREIGN KEY \`FK_orderstatuslogs_order\``);
        await queryRunner.query(`ALTER TABLE \`orderstatuslogs\` DROP FOREIGN KEY \`FK_orderstatuslogs_status\``);
        await queryRunner.query(`ALTER TABLE \`shipmentbox\` DROP FOREIGN KEY \`fk_box_shipment\``);
        await queryRunner.query(`ALTER TABLE \`shipmentboxitem\` DROP FOREIGN KEY \`FK_ShipmentBoxItem_OrderItem\``);
        await queryRunner.query(`ALTER TABLE \`shipmentboxitem\` DROP FOREIGN KEY \`FK_ShipmentBoxItem_ShipmentBox\``);
        await queryRunner.query(`ALTER TABLE \`shipment\` DROP FOREIGN KEY \`fk_shipment_carrier\``);
        await queryRunner.query(`ALTER TABLE \`shipmentorders\` DROP FOREIGN KEY \`FK_ShipmentOrder_Order\``);
        await queryRunner.query(`ALTER TABLE \`shipmentorders\` DROP FOREIGN KEY \`FK_ShipmentOrder_Shipment\``);
        await queryRunner.query(`ALTER TABLE \`productprintingoptions\` DROP FOREIGN KEY \`FK_productprintingoptions_printingoption\``);
        await queryRunner.query(`ALTER TABLE \`productprintingoptions\` DROP FOREIGN KEY \`FK_productprintingoptions_product\``);
        await queryRunner.query(`ALTER TABLE \`product\` DROP FOREIGN KEY \`FK_product_category\``);
        await queryRunner.query(`ALTER TABLE \`product\` DROP FOREIGN KEY \`FK_Product_Client\``);
        await queryRunner.query(`ALTER TABLE \`availablecoloroptions\` DROP FOREIGN KEY \`fk_availablecoloroptions_coloroption\``);
        await queryRunner.query(`ALTER TABLE \`qachecklist\` DROP FOREIGN KEY \`FK_qachecklist_products\``);
        await queryRunner.query(`ALTER TABLE \`sizemeasurements\` DROP FOREIGN KEY \`fk_sizemeasurements_productcategory\``);
        await queryRunner.query(`ALTER TABLE \`sizeoptions\` DROP FOREIGN KEY \`fk_product_region\``);
        await queryRunner.query(`ALTER TABLE \`clientassociates\` DROP FOREIGN KEY \`clientassociates_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`clientassociates\` DROP FOREIGN KEY \`clientassociates_ibfk_2\``);
        await queryRunner.query(`ALTER TABLE \`inventorybillofmaterials\` DROP FOREIGN KEY \`inventorybillofmaterials_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`inventorybillofmaterials\` DROP FOREIGN KEY \`inventorybillofmaterials_ibfk_2\``);
        await queryRunner.query(`ALTER TABLE \`productionorders\` DROP FOREIGN KEY \`productionorders_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`productionconsumption\` DROP FOREIGN KEY \`productionconsumption_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`productionconsumption\` DROP FOREIGN KEY \`productionconsumption_ibfk_2\``);
        await queryRunner.query(`DROP INDEX \`FK_AuditLogs_Users\` ON \`auditlogs\``);
        await queryRunner.query(`DROP INDEX \`FK_orderstatuslogs_order\` ON \`orderstatuslogs\``);
        await queryRunner.query(`DROP INDEX \`FK_orderstatuslogs_status\` ON \`orderstatuslogs\``);
        await queryRunner.query(`DROP INDEX \`FK_ShipmentBoxItem_OrderItem\` ON \`shipmentboxitem\``);
        await queryRunner.query(`DROP INDEX \`FK_ShipmentBoxItem_ShipmentBox\` ON \`shipmentboxitem\``);
        await queryRunner.query(`DROP INDEX \`FK_ShipmentOrder_Order\` ON \`shipmentorders\``);
        await queryRunner.query(`DROP INDEX \`FK_ShipmentOrder_Shipment\` ON \`shipmentorders\``);
        await queryRunner.query(`DROP INDEX \`FK_productprintingoptions_printingoption\` ON \`productprintingoptions\``);
        await queryRunner.query(`DROP INDEX \`FK_productprintingoptions_product\` ON \`productprintingoptions\``);
        await queryRunner.query(`DROP INDEX \`FK_product_category\` ON \`product\``);
        await queryRunner.query(`DROP INDEX \`FK_Product_Client\` ON \`product\``);
        await queryRunner.query(`DROP INDEX \`fk_availablecoloroptions_coloroption\` ON \`availablecoloroptions\``);
        await queryRunner.query(`DROP INDEX \`FK_qachecklist_products\` ON \`qachecklist\``);
        await queryRunner.query(`DROP INDEX \`fk_sizemeasurements_productcategory\` ON \`sizemeasurements\``);
        await queryRunner.query(`DROP INDEX \`fk_product_region\` ON \`sizeoptions\``);
        await queryRunner.query(`DROP INDEX \`CategoryId\` ON \`inventorysubcategories\``);
        await queryRunner.query(`DROP INDEX \`CategoryId\` ON \`inventoryitems\``);
        await queryRunner.query(`DROP INDEX \`ItemCode\` ON \`inventoryitems\``);
        await queryRunner.query(`DROP INDEX \`SubCategoryId\` ON \`inventoryitems\``);
        await queryRunner.query(`DROP INDEX \`SupplierId\` ON \`inventoryitems\``);
        await queryRunner.query(`DROP INDEX \`UnitOfMeasureId\` ON \`inventoryitems\``);
        await queryRunner.query(`DROP INDEX \`InventoryItemId\` ON \`inventorytransactions\``);
        await queryRunner.query(`DROP INDEX \`DocStatusId\` ON \`document\``);
        await queryRunner.query(`DROP INDEX \`DocTypeId\` ON \`document\``);
        await queryRunner.query(`DROP INDEX \`media_id\` ON \`media_links\``);
        await queryRunner.query(`DROP INDEX \`ShipmentId_idx\` ON \`shipmentbox\``);
        await queryRunner.query(`DROP INDEX \`ShipmentCarrierId_idx\` ON \`shipment\``);
        await queryRunner.query(`DROP INDEX \`Type\` ON \`productcategory\``);
        await queryRunner.query(`DROP INDEX \`FK_SleeveType_ProductDetails\` ON \`productdetails\``);
        await queryRunner.query(`DROP INDEX \`ProductCutOptionId\` ON \`productdetails\``);
        await queryRunner.query(`DROP INDEX \`ProductId\` ON \`productdetails\``);
        await queryRunner.query(`DROP INDEX \`RegionName\` ON \`productregionstandard\``);
        await queryRunner.query(`DROP INDEX \`ProductId\` ON \`availablecoloroptions\``);
        await queryRunner.query(`DROP INDEX \`ProductCategoryId\` ON \`sleevetype\``);
        await queryRunner.query(`DROP INDEX \`SleeveTypeName\` ON \`sleevetype\``);
        await queryRunner.query(`DROP INDEX \`StatusName\` ON \`clientstatus\``);
        await queryRunner.query(`DROP INDEX \`ClientId\` ON \`clientassociates\``);
        await queryRunner.query(`DROP INDEX \`StatusId\` ON \`clientassociates\``);
        await queryRunner.query(`DROP INDEX \`Status\` ON \`docstatus\``);
        await queryRunner.query(`DROP INDEX \`Type\` ON \`doctype\``);
        await queryRunner.query(`DROP INDEX \`FinishedGoodId\` ON \`inventorybillofmaterials\``);
        await queryRunner.query(`DROP INDEX \`RawMaterialId\` ON \`inventorybillofmaterials\``);
        await queryRunner.query(`DROP INDEX \`CategoryName\` ON \`ordercategory\``);
        await queryRunner.query(`DROP INDEX \`DocumentId\` ON \`orderdoc\``);
        await queryRunner.query(`DROP INDEX \`DocumentTypeId\` ON \`orderdoc\``);
        await queryRunner.query(`DROP INDEX \`OrderId\` ON \`orderdoc\``);
        await queryRunner.query(`DROP INDEX \`OrderItemId\` ON \`orderdoc\``);
        await queryRunner.query(`DROP INDEX \`EventName\` ON \`orderevent\``);
        await queryRunner.query(`DROP INDEX \`OrderServiceOptionId\` ON \`orderservices\``);
        await queryRunner.query(`DROP INDEX \`OrderServicesId\` ON \`orderservicesmedia\``);
        await queryRunner.query(`DROP INDEX \`ServiceName\` ON \`orderservicesoption\``);
        await queryRunner.query(`DROP INDEX \`OrderServiceOptionId\` ON \`orderserviceunits\``);
        await queryRunner.query(`DROP INDEX \`TypeName\` ON \`ordertype\``);
        await queryRunner.query(`DROP INDEX \`FinishedGoodId\` ON \`productionorders\``);
        await queryRunner.query(`DROP INDEX \`ProductionOrderId\` ON \`productionconsumption\``);
        await queryRunner.query(`DROP INDEX \`RawMaterialId\` ON \`productionconsumption\``);
        await queryRunner.query(`ALTER TABLE \`media\` ADD \`typeId\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`auditlogs\` CHANGE \`CreatedAt\` \`CreatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`Phone\` \`Phone\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`Country\` \`Country\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`State\` \`State\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`City\` \`City\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`CompleteAddress\` \`CompleteAddress\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`CreatedBy\` \`CreatedBy\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`UpdatedBy\` \`UpdatedBy\` varchar(100) NULL`);
        await queryRunner.query(`ALTER TABLE \`coloroption\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`coloroption\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`clientevent\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`fabrictype\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`fabrictype\` CHANGE \`CreatedBy\` \`CreatedBy\` varchar(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`fabrictype\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorycategories\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorycategories\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorycategories\` CHANGE \`DeletedAt\` \`DeletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`inventorysubcategories\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorysubcategories\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorysubcategories\` CHANGE \`DeletedAt\` \`DeletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`inventorysuppliers\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorysuppliers\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorysuppliers\` CHANGE \`DeletedAt\` \`DeletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`unitofmeasures\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`unitofmeasures\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`unitofmeasures\` CHANGE \`DeletedAt\` \`DeletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` CHANGE \`ItemCode\` \`ItemCode\` varchar(20) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` ADD UNIQUE INDEX \`IDX_e3163c01ede195e31e522a83fb\` (\`ItemCode\`)`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` CHANGE \`DeletedAt\` \`DeletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`inventorytransactions\` CHANGE \`TransactionType\` \`TransactionType\` enum ('IN', 'OUT', 'PRODUCTION', 'Opening Balance', 'Return to Stock', 'Return to Supplier', 'Disposal') NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`inventorytransactions\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorytransactions\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorytransactions\` CHANGE \`DeletedAt\` \`DeletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`document\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`document\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`media\` CHANGE \`uploaded_on\` \`uploaded_on\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`media\` CHANGE \`updated_on\` \`updated_on\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`media\` CHANGE \`deleted_at\` \`deleted_at\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`media_links\` CHANGE \`created_on\` \`created_on\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderqualitycheck\` CHANGE \`createdOn\` \`createdOn\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`orderstatus\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderstatuslogs\` CHANGE \`CreatedOn\` \`CreatedOn\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`orderstatuslogs\` CHANGE \`UpdatedOn\` \`UpdatedOn\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`shipmentcarriers\` CHANGE \`createdOn\` \`createdOn\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`shipmentcarriers\` CHANGE \`updatedOn\` \`updatedOn\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`shipmentboxitem\` CHANGE \`Quantity\` \`Quantity\` int NOT NULL DEFAULT '1'`);
        await queryRunner.query(`ALTER TABLE \`shipment\` CHANGE \`ShipmentDate\` \`ShipmentDate\` timestamp NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`shipment\` CHANGE \`Status\` \`Status\` enum ('In Transit', 'Dispatched', 'Damaged', 'Delivered', 'Cancelled', 'Returned', 'Pending Pickup', 'Processing') NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`shipment\` CHANGE \`CreatedOn\` \`CreatedOn\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`shipment\` CHANGE \`UpdatedOn\` \`UpdatedOn\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`orders\` CHANGE \`CreatedOn\` \`CreatedOn\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`orders\` CHANGE \`UpdatedOn\` \`UpdatedOn\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`printingoptions\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`printingoptions\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`Type\` \`Type\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` ADD UNIQUE INDEX \`IDX_9afb755d9f1461f721e7abd2b9\` (\`Type\`)`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`IsTopUnit\` \`IsTopUnit\` tinyint NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`IsBottomUnit\` \`IsBottomUnit\` tinyint NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`SupportsLogo\` \`SupportsLogo\` tinyint NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`IsHat\` \`IsHat\` tinyint NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`IsBag\` \`IsBag\` tinyint NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`IsSocks\` \`IsSocks\` tinyint NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`product\` CHANGE \`isArchived\` \`isArchived\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`product\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productdetails\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productdetails\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderitemsprintingoptions\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderitems\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderitemdetails\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productcutoptions\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productregionstandard\` CHANGE \`Name\` \`Name\` varchar(50) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`productregionstandard\` ADD UNIQUE INDEX \`IDX_27b0c23ad6c425d388f39e4c5f\` (\`Name\`)`);
        await queryRunner.query(`ALTER TABLE \`productregionstandard\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productregionstandard\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`availablecoloroptions\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`availablecoloroptions\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`sizemeasurements\` CHANGE \`H_FusionInside\` \`H_FusionInside\` tinyint NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`sizemeasurements\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL`);
        await queryRunner.query(`ALTER TABLE \`sizemeasurements\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL`);
        await queryRunner.query(`ALTER TABLE \`sizeoptions\` CHANGE \`OptionSizeOptions\` \`OptionSizeOptions\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`sizeoptions\` CHANGE \`CreatedBy\` \`CreatedBy\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`sizeoptions\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`sizeoptions\` CHANGE \`UpdatedBy\` \`UpdatedBy\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`sleevetype\` CHANGE \`SleeveTypeName\` \`SleeveTypeName\` varchar(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`sleevetype\` ADD UNIQUE INDEX \`IDX_be59c0443dfa9cdcd382274ad4\` (\`SleeveTypeName\`)`);
        await queryRunner.query(`ALTER TABLE \`sleevetype\` CHANGE \`ProductCategoryId\` \`ProductCategoryId\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`sleevetype\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`sleevetype\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`clientstatus\` CHANGE \`StatusName\` \`StatusName\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`clientstatus\` ADD UNIQUE INDEX \`IDX_1a5ff7a0179a878fed9b581bb3\` (\`StatusName\`)`);
        await queryRunner.query(`ALTER TABLE \`clientstatus\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`clientstatus\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`clientassociates\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`clientassociates\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`docstatus\` CHANGE \`Status\` \`Status\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`docstatus\` ADD UNIQUE INDEX \`IDX_019ac5644d85bb7fed8b5eff03\` (\`Status\`)`);
        await queryRunner.query(`ALTER TABLE \`docstatus\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`docstatus\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`doctype\` CHANGE \`Type\` \`Type\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`doctype\` ADD UNIQUE INDEX \`IDX_43c3358584886b8e7ac1291d38\` (\`Type\`)`);
        await queryRunner.query(`ALTER TABLE \`doctype\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`doctype\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorybillofmaterials\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`inventorybillofmaterials\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`ordercategory\` CHANGE \`CategoryName\` \`CategoryName\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`ordercategory\` ADD UNIQUE INDEX \`IDX_17e65fdf001721cfd017bc3df3\` (\`CategoryName\`)`);
        await queryRunner.query(`ALTER TABLE \`ordercategory\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`ordercategory\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderdoc\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderdoc\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderevent\` CHANGE \`EventName\` \`EventName\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`orderevent\` ADD UNIQUE INDEX \`IDX_140833f21152c0c440bc772f86\` (\`EventName\`)`);
        await queryRunner.query(`ALTER TABLE \`orderevent\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderevent\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderservices\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderservices\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderservicesmedia\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderservicesmedia\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderservicesoption\` CHANGE \`ServiceName\` \`ServiceName\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`orderservicesoption\` ADD UNIQUE INDEX \`IDX_cf8ef7d6b246149cf095e6f0bb\` (\`ServiceName\`)`);
        await queryRunner.query(`ALTER TABLE \`orderservicesoption\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderservicesoption\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderserviceunits\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderserviceunits\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`ordertype\` CHANGE \`TypeName\` \`TypeName\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`ordertype\` ADD UNIQUE INDEX \`IDX_cb2be0f9dbb77b1870b4127998\` (\`TypeName\`)`);
        await queryRunner.query(`ALTER TABLE \`ordertype\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`ordertype\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productionorders\` CHANGE \`IsCompleted\` \`IsCompleted\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`productionorders\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productionorders\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productionconsumption\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productionconsumption\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`auditlogs\` ADD CONSTRAINT \`FK_002a4d398ca4c20bd2d2a60f6f1\` FOREIGN KEY (\`UserId\`) REFERENCES \`users\`(\`Id\`) ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`inventorysubcategories\` ADD CONSTRAINT \`FK_2fd272dc59df5df791fb564c37f\` FOREIGN KEY (\`CategoryId\`) REFERENCES \`inventorycategories\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` ADD CONSTRAINT \`FK_203c2bf7b80e6fd4d8154782dc5\` FOREIGN KEY (\`CategoryId\`) REFERENCES \`inventorycategories\`(\`Id\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` ADD CONSTRAINT \`FK_a70db236cc5038802ddf1800b91\` FOREIGN KEY (\`SubCategoryId\`) REFERENCES \`inventorysubcategories\`(\`Id\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` ADD CONSTRAINT \`FK_b97b45d73c008a15eaa5e3735f9\` FOREIGN KEY (\`UnitOfMeasureId\`) REFERENCES \`unitofmeasures\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` ADD CONSTRAINT \`FK_4b02c6e91094d2f5b05d06b7660\` FOREIGN KEY (\`SupplierId\`) REFERENCES \`inventorysuppliers\`(\`Id\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventorytransactions\` ADD CONSTRAINT \`FK_30df99ae3fd00a90afc16d6dee3\` FOREIGN KEY (\`InventoryItemId\`) REFERENCES \`inventoryitems\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`media_links\` ADD CONSTRAINT \`FK_2bfcb41e5731790b33ff54206d6\` FOREIGN KEY (\`media_id\`) REFERENCES \`media\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orderstatuslogs\` ADD CONSTRAINT \`FK_fdbe4adea6804055b8d3f744088\` FOREIGN KEY (\`OrderId\`) REFERENCES \`orders\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orderstatuslogs\` ADD CONSTRAINT \`FK_4ed746d2de6d3ecab78d17b451a\` FOREIGN KEY (\`StatusId\`) REFERENCES \`orderstatus\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shipmentbox\` ADD CONSTRAINT \`FK_6a686f57d63373d5b849ac5c5ca\` FOREIGN KEY (\`ShipmentId\`) REFERENCES \`shipment\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shipmentboxitem\` ADD CONSTRAINT \`FK_f862d4102c43737c726653cb1d2\` FOREIGN KEY (\`ShipmentBoxId\`) REFERENCES \`shipmentbox\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shipmentboxitem\` ADD CONSTRAINT \`FK_ec31c3d5818eb0781a6fcfb7f33\` FOREIGN KEY (\`OrderItemId\`) REFERENCES \`orderitems\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shipment\` ADD CONSTRAINT \`FK_5fa695ca0ba7dcd91b893785e4e\` FOREIGN KEY (\`ShipmentCarrierId\`) REFERENCES \`shipmentcarriers\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shipmentorders\` ADD CONSTRAINT \`FK_e0e81a1ac5c8fd8d2c0139f3c05\` FOREIGN KEY (\`ShipmentId\`) REFERENCES \`shipment\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shipmentorders\` ADD CONSTRAINT \`FK_72b89591175361c1c6e9deebf6c\` FOREIGN KEY (\`OrderId\`) REFERENCES \`orders\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_03e8035f8785687928158cfc469\` FOREIGN KEY (\`ClientId\`) REFERENCES \`client\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_09aeefb31d6680f01dbba037fac\` FOREIGN KEY (\`OrderEventId\`) REFERENCES \`clientevent\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_f0de26ae7faeec6941a1f51185d\` FOREIGN KEY (\`OrderStatusId\`) REFERENCES \`orderstatus\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`productprintingoptions\` ADD CONSTRAINT \`FK_6a4a2b837570850aecf28512b43\` FOREIGN KEY (\`ProductId\`) REFERENCES \`product\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`productprintingoptions\` ADD CONSTRAINT \`FK_71b7897cb5069ce41c36e410946\` FOREIGN KEY (\`PrintingOptionId\`) REFERENCES \`printingoptions\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`product\` ADD CONSTRAINT \`FK_bd0317393b7cdba698e1aaf2f3b\` FOREIGN KEY (\`ClientId\`) REFERENCES \`client\`(\`Id\`) ON DELETE SET NULL ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`product\` ADD CONSTRAINT \`FK_e90fcabbd3586fe648d1a89d5ba\` FOREIGN KEY (\`ProductCategoryId\`) REFERENCES \`productcategory\`(\`Id\`) ON DELETE NO ACTION ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`product\` ADD CONSTRAINT \`FK_5ccdcf3ec8c6405004928c5a51e\` FOREIGN KEY (\`FabricTypeId\`) REFERENCES \`fabrictype\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orderitemsprintingoptions\` ADD CONSTRAINT \`FK_19ef19832f1aea9f783b08b1207\` FOREIGN KEY (\`OrderItemId\`) REFERENCES \`orderitems\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orderitemsprintingoptions\` ADD CONSTRAINT \`FK_fb6cdbf24d0bb6d7839f599ff1d\` FOREIGN KEY (\`PrintingOptionId\`) REFERENCES \`printingoptions\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orderitems\` ADD CONSTRAINT \`FK_de6a4f414d281550cf84f2b1826\` FOREIGN KEY (\`OrderId\`) REFERENCES \`orders\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orderitems\` ADD CONSTRAINT \`FK_5c0b1f9722fd168ff1724e26965\` FOREIGN KEY (\`ProductId\`) REFERENCES \`product\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orderitemdetails\` ADD CONSTRAINT \`FK_8ce452ffb216cd16b3b73ccd8c6\` FOREIGN KEY (\`OrderItemId\`) REFERENCES \`orderitems\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orderitemdetails\` ADD CONSTRAINT \`FK_11451bffb91e693393ab126631b\` FOREIGN KEY (\`ColorOptionId\`) REFERENCES \`coloroption\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`availablecoloroptions\` ADD CONSTRAINT \`FK_dc1f8c870ddedbe52c1abadf601\` FOREIGN KEY (\`colorId\`) REFERENCES \`coloroption\`(\`Id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`qachecklist\` ADD CONSTRAINT \`FK_509e994f88fef8a7870818b0412\` FOREIGN KEY (\`productId\`) REFERENCES \`product\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`sizeoptions\` ADD CONSTRAINT \`FK_1f6c115b30bd540ec31a96494d9\` FOREIGN KEY (\`ProductRegionId\`) REFERENCES \`productregionstandard\`(\`Id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`sleevetype\` ADD CONSTRAINT \`FK_fe8da080f35caa499b4600e966a\` FOREIGN KEY (\`ProductCategoryId\`) REFERENCES \`productcategory\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`clientassociates\` ADD CONSTRAINT \`FK_18fba7e6befe4424cb498c524f8\` FOREIGN KEY (\`ClientId\`) REFERENCES \`client\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`clientassociates\` ADD CONSTRAINT \`FK_d9559c830b9f3489b9600001dc8\` FOREIGN KEY (\`StatusId\`) REFERENCES \`clientstatus\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventorybillofmaterials\` ADD CONSTRAINT \`FK_716926a44f5a39c5d4ef5bd3db8\` FOREIGN KEY (\`FinishedGoodId\`) REFERENCES \`inventoryitems\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventorybillofmaterials\` ADD CONSTRAINT \`FK_8f3688cfecf62bd5b4d4120e618\` FOREIGN KEY (\`RawMaterialId\`) REFERENCES \`inventoryitems\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orderserviceunits\` ADD CONSTRAINT \`FK_7934a82a18392b5433d03507b6d\` FOREIGN KEY (\`OrderServiceOptionId\`) REFERENCES \`orderservicesoption\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`productionorders\` ADD CONSTRAINT \`FK_936afd15061a20b9470cd90b98d\` FOREIGN KEY (\`FinishedGoodId\`) REFERENCES \`inventoryitems\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`productionconsumption\` ADD CONSTRAINT \`FK_2b0b4efe482b0479f7c2573a738\` FOREIGN KEY (\`ProductionOrderId\`) REFERENCES \`productionorders\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`productionconsumption\` ADD CONSTRAINT \`FK_5651c06aadec19b5ac6588b6461\` FOREIGN KEY (\`RawMaterialId\`) REFERENCES \`inventoryitems\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`productionconsumption\` DROP FOREIGN KEY \`FK_5651c06aadec19b5ac6588b6461\``);
        await queryRunner.query(`ALTER TABLE \`productionconsumption\` DROP FOREIGN KEY \`FK_2b0b4efe482b0479f7c2573a738\``);
        await queryRunner.query(`ALTER TABLE \`productionorders\` DROP FOREIGN KEY \`FK_936afd15061a20b9470cd90b98d\``);
        await queryRunner.query(`ALTER TABLE \`orderserviceunits\` DROP FOREIGN KEY \`FK_7934a82a18392b5433d03507b6d\``);
        await queryRunner.query(`ALTER TABLE \`inventorybillofmaterials\` DROP FOREIGN KEY \`FK_8f3688cfecf62bd5b4d4120e618\``);
        await queryRunner.query(`ALTER TABLE \`inventorybillofmaterials\` DROP FOREIGN KEY \`FK_716926a44f5a39c5d4ef5bd3db8\``);
        await queryRunner.query(`ALTER TABLE \`clientassociates\` DROP FOREIGN KEY \`FK_d9559c830b9f3489b9600001dc8\``);
        await queryRunner.query(`ALTER TABLE \`clientassociates\` DROP FOREIGN KEY \`FK_18fba7e6befe4424cb498c524f8\``);
        await queryRunner.query(`ALTER TABLE \`sleevetype\` DROP FOREIGN KEY \`FK_fe8da080f35caa499b4600e966a\``);
        await queryRunner.query(`ALTER TABLE \`sizeoptions\` DROP FOREIGN KEY \`FK_1f6c115b30bd540ec31a96494d9\``);
        await queryRunner.query(`ALTER TABLE \`qachecklist\` DROP FOREIGN KEY \`FK_509e994f88fef8a7870818b0412\``);
        await queryRunner.query(`ALTER TABLE \`availablecoloroptions\` DROP FOREIGN KEY \`FK_dc1f8c870ddedbe52c1abadf601\``);
        await queryRunner.query(`ALTER TABLE \`orderitemdetails\` DROP FOREIGN KEY \`FK_11451bffb91e693393ab126631b\``);
        await queryRunner.query(`ALTER TABLE \`orderitemdetails\` DROP FOREIGN KEY \`FK_8ce452ffb216cd16b3b73ccd8c6\``);
        await queryRunner.query(`ALTER TABLE \`orderitems\` DROP FOREIGN KEY \`FK_5c0b1f9722fd168ff1724e26965\``);
        await queryRunner.query(`ALTER TABLE \`orderitems\` DROP FOREIGN KEY \`FK_de6a4f414d281550cf84f2b1826\``);
        await queryRunner.query(`ALTER TABLE \`orderitemsprintingoptions\` DROP FOREIGN KEY \`FK_fb6cdbf24d0bb6d7839f599ff1d\``);
        await queryRunner.query(`ALTER TABLE \`orderitemsprintingoptions\` DROP FOREIGN KEY \`FK_19ef19832f1aea9f783b08b1207\``);
        await queryRunner.query(`ALTER TABLE \`product\` DROP FOREIGN KEY \`FK_5ccdcf3ec8c6405004928c5a51e\``);
        await queryRunner.query(`ALTER TABLE \`product\` DROP FOREIGN KEY \`FK_e90fcabbd3586fe648d1a89d5ba\``);
        await queryRunner.query(`ALTER TABLE \`product\` DROP FOREIGN KEY \`FK_bd0317393b7cdba698e1aaf2f3b\``);
        await queryRunner.query(`ALTER TABLE \`productprintingoptions\` DROP FOREIGN KEY \`FK_71b7897cb5069ce41c36e410946\``);
        await queryRunner.query(`ALTER TABLE \`productprintingoptions\` DROP FOREIGN KEY \`FK_6a4a2b837570850aecf28512b43\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_f0de26ae7faeec6941a1f51185d\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_09aeefb31d6680f01dbba037fac\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_03e8035f8785687928158cfc469\``);
        await queryRunner.query(`ALTER TABLE \`shipmentorders\` DROP FOREIGN KEY \`FK_72b89591175361c1c6e9deebf6c\``);
        await queryRunner.query(`ALTER TABLE \`shipmentorders\` DROP FOREIGN KEY \`FK_e0e81a1ac5c8fd8d2c0139f3c05\``);
        await queryRunner.query(`ALTER TABLE \`shipment\` DROP FOREIGN KEY \`FK_5fa695ca0ba7dcd91b893785e4e\``);
        await queryRunner.query(`ALTER TABLE \`shipmentboxitem\` DROP FOREIGN KEY \`FK_ec31c3d5818eb0781a6fcfb7f33\``);
        await queryRunner.query(`ALTER TABLE \`shipmentboxitem\` DROP FOREIGN KEY \`FK_f862d4102c43737c726653cb1d2\``);
        await queryRunner.query(`ALTER TABLE \`shipmentbox\` DROP FOREIGN KEY \`FK_6a686f57d63373d5b849ac5c5ca\``);
        await queryRunner.query(`ALTER TABLE \`orderstatuslogs\` DROP FOREIGN KEY \`FK_4ed746d2de6d3ecab78d17b451a\``);
        await queryRunner.query(`ALTER TABLE \`orderstatuslogs\` DROP FOREIGN KEY \`FK_fdbe4adea6804055b8d3f744088\``);
        await queryRunner.query(`ALTER TABLE \`media_links\` DROP FOREIGN KEY \`FK_2bfcb41e5731790b33ff54206d6\``);
        await queryRunner.query(`ALTER TABLE \`inventorytransactions\` DROP FOREIGN KEY \`FK_30df99ae3fd00a90afc16d6dee3\``);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` DROP FOREIGN KEY \`FK_4b02c6e91094d2f5b05d06b7660\``);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` DROP FOREIGN KEY \`FK_b97b45d73c008a15eaa5e3735f9\``);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` DROP FOREIGN KEY \`FK_a70db236cc5038802ddf1800b91\``);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` DROP FOREIGN KEY \`FK_203c2bf7b80e6fd4d8154782dc5\``);
        await queryRunner.query(`ALTER TABLE \`inventorysubcategories\` DROP FOREIGN KEY \`FK_2fd272dc59df5df791fb564c37f\``);
        await queryRunner.query(`ALTER TABLE \`auditlogs\` DROP FOREIGN KEY \`FK_002a4d398ca4c20bd2d2a60f6f1\``);
        await queryRunner.query(`ALTER TABLE \`productionconsumption\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productionconsumption\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productionorders\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productionorders\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productionorders\` CHANGE \`IsCompleted\` \`IsCompleted\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`ordertype\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`ordertype\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`ordertype\` DROP INDEX \`IDX_cb2be0f9dbb77b1870b4127998\``);
        await queryRunner.query(`ALTER TABLE \`ordertype\` CHANGE \`TypeName\` \`TypeName\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`orderserviceunits\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderserviceunits\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderservicesoption\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderservicesoption\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderservicesoption\` DROP INDEX \`IDX_cf8ef7d6b246149cf095e6f0bb\``);
        await queryRunner.query(`ALTER TABLE \`orderservicesoption\` CHANGE \`ServiceName\` \`ServiceName\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`orderservicesmedia\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderservicesmedia\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderservices\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderservices\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderevent\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderevent\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderevent\` DROP INDEX \`IDX_140833f21152c0c440bc772f86\``);
        await queryRunner.query(`ALTER TABLE \`orderevent\` CHANGE \`EventName\` \`EventName\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`orderdoc\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderdoc\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`ordercategory\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`ordercategory\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`ordercategory\` DROP INDEX \`IDX_17e65fdf001721cfd017bc3df3\``);
        await queryRunner.query(`ALTER TABLE \`ordercategory\` CHANGE \`CategoryName\` \`CategoryName\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`inventorybillofmaterials\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorybillofmaterials\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime(0) NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`doctype\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`doctype\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`doctype\` DROP INDEX \`IDX_43c3358584886b8e7ac1291d38\``);
        await queryRunner.query(`ALTER TABLE \`doctype\` CHANGE \`Type\` \`Type\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`docstatus\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`docstatus\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`docstatus\` DROP INDEX \`IDX_019ac5644d85bb7fed8b5eff03\``);
        await queryRunner.query(`ALTER TABLE \`docstatus\` CHANGE \`Status\` \`Status\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`clientassociates\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`clientassociates\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`clientstatus\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`clientstatus\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`clientstatus\` DROP INDEX \`IDX_1a5ff7a0179a878fed9b581bb3\``);
        await queryRunner.query(`ALTER TABLE \`clientstatus\` CHANGE \`StatusName\` \`StatusName\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`sleevetype\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`sleevetype\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`sleevetype\` CHANGE \`ProductCategoryId\` \`ProductCategoryId\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`sleevetype\` DROP INDEX \`IDX_be59c0443dfa9cdcd382274ad4\``);
        await queryRunner.query(`ALTER TABLE \`sleevetype\` CHANGE \`SleeveTypeName\` \`SleeveTypeName\` varchar(100) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`sizeoptions\` CHANGE \`UpdatedBy\` \`UpdatedBy\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`sizeoptions\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`sizeoptions\` CHANGE \`CreatedBy\` \`CreatedBy\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`sizeoptions\` CHANGE \`OptionSizeOptions\` \`OptionSizeOptions\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`sizemeasurements\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`sizemeasurements\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`sizemeasurements\` CHANGE \`H_FusionInside\` \`H_FusionInside\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`availablecoloroptions\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`availablecoloroptions\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productregionstandard\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productregionstandard\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productregionstandard\` DROP INDEX \`IDX_27b0c23ad6c425d388f39e4c5f\``);
        await queryRunner.query(`ALTER TABLE \`productregionstandard\` CHANGE \`Name\` \`Name\` varchar(50) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`productcutoptions\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderitemdetails\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderitems\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderitemsprintingoptions\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productdetails\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productdetails\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`product\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`product\` CHANGE \`isArchived\` \`isArchived\` tinyint(1) NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`IsSocks\` \`IsSocks\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`IsBag\` \`IsBag\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`IsHat\` \`IsHat\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`SupportsLogo\` \`SupportsLogo\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`IsBottomUnit\` \`IsBottomUnit\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`IsTopUnit\` \`IsTopUnit\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`productcategory\` DROP INDEX \`IDX_9afb755d9f1461f721e7abd2b9\``);
        await queryRunner.query(`ALTER TABLE \`productcategory\` CHANGE \`Type\` \`Type\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`printingoptions\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`printingoptions\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orders\` CHANGE \`UpdatedOn\` \`UpdatedOn\` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orders\` CHANGE \`CreatedOn\` \`CreatedOn\` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`shipment\` CHANGE \`UpdatedOn\` \`UpdatedOn\` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`shipment\` CHANGE \`CreatedOn\` \`CreatedOn\` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP`);

        await queryRunner.query(`
            UPDATE shipment
            SET Status = 'Cancelled'
            WHERE Status NOT IN ('In Transit', 'Damaged', 'Delivered', 'Cancelled');
        `);

        await queryRunner.query(`
            ALTER TABLE \`shipment\`
            CHANGE \`UpdatedOn\` \`UpdatedOn\` timestamp(0)
            NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
        `);
                
        await queryRunner.query(`
            ALTER TABLE \`shipment\`
            CHANGE \`CreatedOn\` \`CreatedOn\` timestamp(0)
            NOT NULL DEFAULT CURRENT_TIMESTAMP
        `);

        await queryRunner.query(`
            ALTER TABLE \`shipment\`
            CHANGE \`Status\` \`Status\`
            enum ('In Transit', 'Damaged', 'Delivered', 'Cancelled') NOT NUL
        `);

        await queryRunner.query(`
            ALTER TABLE \`shipment\`
            CHANGE \`ShipmentDate\` \`ShipmentDate\` timestamp
            NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
        `);

        await queryRunner.query(`ALTER TABLE \`shipment\` CHANGE \`ShipmentDate\` \`ShipmentDate\` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`shipmentboxitem\` CHANGE \`Quantity\` \`Quantity\` int NULL DEFAULT '1'`);
        await queryRunner.query(`ALTER TABLE \`shipmentcarriers\` CHANGE \`updatedOn\` \`updatedOn\` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`shipmentcarriers\` CHANGE \`createdOn\` \`createdOn\` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderstatuslogs\` CHANGE \`UpdatedOn\` \`UpdatedOn\` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderstatuslogs\` CHANGE \`CreatedOn\` \`CreatedOn\` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderstatus\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`orderqualitycheck\` CHANGE \`createdOn\` \`createdOn\` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`media_links\` CHANGE \`created_on\` \`created_on\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`media\` CHANGE \`deleted_at\` \`deleted_at\` datetime(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`media\` CHANGE \`updated_on\` \`updated_on\` datetime(0) NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`media\` CHANGE \`uploaded_on\` \`uploaded_on\` datetime(0) NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`document\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`document\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorytransactions\` CHANGE \`DeletedAt\` \`DeletedAt\` datetime(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`inventorytransactions\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorytransactions\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorytransactions\` CHANGE \`TransactionType\` \`TransactionType\` ENUM('IN', 'OUT', 'PRODUCTION', 'Opening Balance', 'Disposal') COLLATE utf8mb4_general_ci NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` CHANGE \`DeletedAt\` \`DeletedAt\` datetime(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` DROP INDEX \`IDX_e3163c01ede195e31e522a83fb\``);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` CHANGE \`ItemCode\` \`ItemCode\` varchar(20) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`unitofmeasures\` CHANGE \`DeletedAt\` \`DeletedAt\` datetime(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`unitofmeasures\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`unitofmeasures\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorysuppliers\` CHANGE \`DeletedAt\` \`DeletedAt\` datetime(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`inventorysuppliers\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorysuppliers\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorysubcategories\` CHANGE \`DeletedAt\` \`DeletedAt\` datetime(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`inventorysubcategories\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorysubcategories\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorycategories\` CHANGE \`DeletedAt\` \`DeletedAt\` datetime(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`inventorycategories\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`inventorycategories\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`fabrictype\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`fabrictype\` CHANGE \`CreatedBy\` \`CreatedBy\` varchar(100) COLLATE "utf8mb4_general_ci" NULL`);
        await queryRunner.query(`ALTER TABLE \`fabrictype\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`clientevent\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`coloroption\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`coloroption\` CHANGE \`CreatedOn\` \`CreatedOn\` datetime NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`UpdatedBy\` \`UpdatedBy\` varchar(100) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`CreatedBy\` \`CreatedBy\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`CompleteAddress\` \`CompleteAddress\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`City\` \`City\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`State\` \`State\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`Country\` \`Country\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`client\` CHANGE \`Phone\` \`Phone\` varchar(255) COLLATE "utf8mb4_general_ci" NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`auditlogs\` CHANGE \`CreatedAt\` \`CreatedAt\` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`UpdatedOn\` \`UpdatedOn\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE \`media\` DROP COLUMN \`typeId\``);
        await queryRunner.query(`CREATE INDEX \`fk_product_region\` ON \`sizeoptions\` (\`ProductRegionId\`)`);
        await queryRunner.query(`CREATE INDEX \`fk_sizemeasurements_productcategory\` ON \`sizemeasurements\` (\`ProductCategoryId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_qachecklist_products\` ON \`qachecklist\` (\`productId\`)`);
        await queryRunner.query(`CREATE INDEX \`fk_availablecoloroptions_coloroption\` ON \`availablecoloroptions\` (\`colorId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_Product_Client\` ON \`product\` (\`ClientId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_product_category\` ON \`product\` (\`ProductCategoryId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_productprintingoptions_product\` ON \`productprintingoptions\` (\`ProductId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_productprintingoptions_printingoption\` ON \`productprintingoptions\` (\`PrintingOptionId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_ShipmentOrder_Shipment\` ON \`shipmentorders\` (\`ShipmentId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_ShipmentOrder_Order\` ON \`shipmentorders\` (\`OrderId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_ShipmentBoxItem_ShipmentBox\` ON \`shipmentboxitem\` (\`ShipmentBoxId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_ShipmentBoxItem_OrderItem\` ON \`shipmentboxitem\` (\`OrderItemId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_orderstatuslogs_status\` ON \`orderstatuslogs\` (\`StatusId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_orderstatuslogs_order\` ON \`orderstatuslogs\` (\`OrderId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_AuditLogs_Users\` ON \`auditlogs\` (\`UserId\`)`);
        await queryRunner.query(`CREATE INDEX \`RawMaterialId\` ON \`productionconsumption\` (\`RawMaterialId\`)`);
        await queryRunner.query(`CREATE INDEX \`ProductionOrderId\` ON \`productionconsumption\` (\`ProductionOrderId\`)`);
        await queryRunner.query(`CREATE INDEX \`FinishedGoodId\` ON \`productionorders\` (\`FinishedGoodId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`TypeName\` ON \`ordertype\` (\`TypeName\`)`);
        await queryRunner.query(`CREATE INDEX \`OrderServiceOptionId\` ON \`orderserviceunits\` (\`OrderServiceOptionId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`ServiceName\` ON \`orderservicesoption\` (\`ServiceName\`)`);
        await queryRunner.query(`CREATE INDEX \`OrderServicesId\` ON \`orderservicesmedia\` (\`OrderServicesId\`)`);
        await queryRunner.query(`CREATE INDEX \`OrderServiceOptionId\` ON \`orderservices\` (\`OrderServiceOptionId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`EventName\` ON \`orderevent\` (\`EventName\`)`);
        await queryRunner.query(`CREATE INDEX \`OrderItemId\` ON \`orderdoc\` (\`OrderItemId\`)`);
        await queryRunner.query(`CREATE INDEX \`OrderId\` ON \`orderdoc\` (\`OrderId\`)`);
        await queryRunner.query(`CREATE INDEX \`DocumentTypeId\` ON \`orderdoc\` (\`DocumentTypeId\`)`);
        await queryRunner.query(`CREATE INDEX \`DocumentId\` ON \`orderdoc\` (\`DocumentId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`CategoryName\` ON \`ordercategory\` (\`CategoryName\`)`);
        await queryRunner.query(`CREATE INDEX \`RawMaterialId\` ON \`inventorybillofmaterials\` (\`RawMaterialId\`)`);
        await queryRunner.query(`CREATE INDEX \`FinishedGoodId\` ON \`inventorybillofmaterials\` (\`FinishedGoodId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`Type\` ON \`doctype\` (\`Type\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`Status\` ON \`docstatus\` (\`Status\`)`);
        await queryRunner.query(`CREATE INDEX \`StatusId\` ON \`clientassociates\` (\`StatusId\`)`);
        await queryRunner.query(`CREATE INDEX \`ClientId\` ON \`clientassociates\` (\`ClientId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`StatusName\` ON \`clientstatus\` (\`StatusName\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`SleeveTypeName\` ON \`sleevetype\` (\`SleeveTypeName\`)`);
        await queryRunner.query(`CREATE INDEX \`ProductCategoryId\` ON \`sleevetype\` (\`ProductCategoryId\`)`);
        await queryRunner.query(`CREATE INDEX \`ProductId\` ON \`availablecoloroptions\` (\`ProductId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`RegionName\` ON \`productregionstandard\` (\`Name\`)`);
        await queryRunner.query(`CREATE INDEX \`ProductId\` ON \`productdetails\` (\`ProductId\`)`);
        await queryRunner.query(`CREATE INDEX \`ProductCutOptionId\` ON \`productdetails\` (\`ProductCutOptionId\`)`);
        await queryRunner.query(`CREATE INDEX \`FK_SleeveType_ProductDetails\` ON \`productdetails\` (\`SleeveTypeId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`Type\` ON \`productcategory\` (\`Type\`)`);
        await queryRunner.query(`CREATE INDEX \`ShipmentCarrierId_idx\` ON \`shipment\` (\`ShipmentCarrierId\`)`);
        await queryRunner.query(`CREATE INDEX \`ShipmentId_idx\` ON \`shipmentbox\` (\`ShipmentId\`)`);
        await queryRunner.query(`CREATE INDEX \`media_id\` ON \`media_links\` (\`media_id\`)`);
        await queryRunner.query(`CREATE INDEX \`DocTypeId\` ON \`document\` (\`DocTypeId\`)`);
        await queryRunner.query(`CREATE INDEX \`DocStatusId\` ON \`document\` (\`DocStatusId\`)`);
        await queryRunner.query(`CREATE INDEX \`InventoryItemId\` ON \`inventorytransactions\` (\`InventoryItemId\`)`);
        await queryRunner.query(`CREATE INDEX \`UnitOfMeasureId\` ON \`inventoryitems\` (\`UnitOfMeasureId\`)`);
        await queryRunner.query(`CREATE INDEX \`SupplierId\` ON \`inventoryitems\` (\`SupplierId\`)`);
        await queryRunner.query(`CREATE INDEX \`SubCategoryId\` ON \`inventoryitems\` (\`SubCategoryId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`ItemCode\` ON \`inventoryitems\` (\`ItemCode\`)`);
        await queryRunner.query(`CREATE INDEX \`CategoryId\` ON \`inventoryitems\` (\`CategoryId\`)`);
        await queryRunner.query(`CREATE INDEX \`CategoryId\` ON \`inventorysubcategories\` (\`CategoryId\`)`);
        await queryRunner.query(`ALTER TABLE \`productionconsumption\` ADD CONSTRAINT \`productionconsumption_ibfk_2\` FOREIGN KEY (\`RawMaterialId\`) REFERENCES \`inventoryitems\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`productionconsumption\` ADD CONSTRAINT \`productionconsumption_ibfk_1\` FOREIGN KEY (\`ProductionOrderId\`) REFERENCES \`productionorders\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`productionorders\` ADD CONSTRAINT \`productionorders_ibfk_1\` FOREIGN KEY (\`FinishedGoodId\`) REFERENCES \`inventoryitems\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventorybillofmaterials\` ADD CONSTRAINT \`inventorybillofmaterials_ibfk_2\` FOREIGN KEY (\`RawMaterialId\`) REFERENCES \`inventoryitems\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventorybillofmaterials\` ADD CONSTRAINT \`inventorybillofmaterials_ibfk_1\` FOREIGN KEY (\`FinishedGoodId\`) REFERENCES \`inventoryitems\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`clientassociates\` ADD CONSTRAINT \`clientassociates_ibfk_2\` FOREIGN KEY (\`StatusId\`) REFERENCES \`clientstatus\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`clientassociates\` ADD CONSTRAINT \`clientassociates_ibfk_1\` FOREIGN KEY (\`ClientId\`) REFERENCES \`client\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`sizeoptions\` ADD CONSTRAINT \`fk_product_region\` FOREIGN KEY (\`ProductRegionId\`) REFERENCES \`productregionstandard\`(\`Id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`sizemeasurements\` ADD CONSTRAINT \`fk_sizemeasurements_productcategory\` FOREIGN KEY (\`ProductCategoryId\`) REFERENCES \`productcategory\`(\`Id\`) ON DELETE SET NULL ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`qachecklist\` ADD CONSTRAINT \`FK_qachecklist_products\` FOREIGN KEY (\`productId\`) REFERENCES \`product\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`availablecoloroptions\` ADD CONSTRAINT \`fk_availablecoloroptions_coloroption\` FOREIGN KEY (\`colorId\`) REFERENCES \`coloroption\`(\`Id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`product\` ADD CONSTRAINT \`FK_Product_Client\` FOREIGN KEY (\`ClientId\`) REFERENCES \`client\`(\`Id\`) ON DELETE SET NULL ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`product\` ADD CONSTRAINT \`FK_product_category\` FOREIGN KEY (\`ProductCategoryId\`) REFERENCES \`productcategory\`(\`Id\`) ON DELETE NO ACTION ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`productprintingoptions\` ADD CONSTRAINT \`FK_productprintingoptions_product\` FOREIGN KEY (\`ProductId\`) REFERENCES \`product\`(\`Id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`productprintingoptions\` ADD CONSTRAINT \`FK_productprintingoptions_printingoption\` FOREIGN KEY (\`PrintingOptionId\`) REFERENCES \`printingoptions\`(\`Id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`shipmentorders\` ADD CONSTRAINT \`FK_ShipmentOrder_Shipment\` FOREIGN KEY (\`ShipmentId\`) REFERENCES \`shipment\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shipmentorders\` ADD CONSTRAINT \`FK_ShipmentOrder_Order\` FOREIGN KEY (\`OrderId\`) REFERENCES \`orders\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shipment\` ADD CONSTRAINT \`fk_shipment_carrier\` FOREIGN KEY (\`ShipmentCarrierId\`) REFERENCES \`shipmentcarriers\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shipmentboxitem\` ADD CONSTRAINT \`FK_ShipmentBoxItem_ShipmentBox\` FOREIGN KEY (\`ShipmentBoxId\`) REFERENCES \`shipmentbox\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shipmentboxitem\` ADD CONSTRAINT \`FK_ShipmentBoxItem_OrderItem\` FOREIGN KEY (\`OrderItemId\`) REFERENCES \`orderitems\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`shipmentbox\` ADD CONSTRAINT \`fk_box_shipment\` FOREIGN KEY (\`ShipmentId\`) REFERENCES \`shipment\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orderstatuslogs\` ADD CONSTRAINT \`FK_orderstatuslogs_status\` FOREIGN KEY (\`StatusId\`) REFERENCES \`orderstatus\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orderstatuslogs\` ADD CONSTRAINT \`FK_orderstatuslogs_order\` FOREIGN KEY (\`OrderId\`) REFERENCES \`orders\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`media_links\` ADD CONSTRAINT \`media_links_ibfk_1\` FOREIGN KEY (\`media_id\`) REFERENCES \`media\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventorytransactions\` ADD CONSTRAINT \`InventoryTransactions_ibfk_1\` FOREIGN KEY (\`InventoryItemId\`) REFERENCES \`inventoryitems\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` ADD CONSTRAINT \`InventoryItems_ibfk_4\` FOREIGN KEY (\`CategoryId\`) REFERENCES \`inventorycategories\`(\`Id\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` ADD CONSTRAINT \`InventoryItems_ibfk_3\` FOREIGN KEY (\`UnitOfMeasureId\`) REFERENCES \`unitofmeasures\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` ADD CONSTRAINT \`InventoryItems_ibfk_2\` FOREIGN KEY (\`SupplierId\`) REFERENCES \`inventorysuppliers\`(\`Id\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventoryitems\` ADD CONSTRAINT \`InventoryItems_ibfk_1\` FOREIGN KEY (\`SubCategoryId\`) REFERENCES \`inventorysubcategories\`(\`Id\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`inventorysubcategories\` ADD CONSTRAINT \`inventorysubcategories_ibfk_1\` FOREIGN KEY (\`CategoryId\`) REFERENCES \`inventorycategories\`(\`Id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`auditlogs\` ADD CONSTRAINT \`FK_AuditLogs_Users\` FOREIGN KEY (\`UserId\`) REFERENCES \`users\`(\`Id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

}
